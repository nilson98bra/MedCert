version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: medcert-backend
    ports:
      - '3000:3000'
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      mongodb:
        condition: service_healthy
    env_file:
      - ./backend/.env
    restart: unless-stopped
    command: npm run start:dev
    networks:
      - medcert-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: medcert-frontend
    ports:
      - '5173:5173'
    volumes:
      - ./frontend:/app
      - /app/node_modules
    env_file:
      - ./frontend/.env
  mongodb:
    image: mongo:5.0
    container_name: medcert-mongodb
    ports:
      - '27017:27017'
    volumes:
      - mongodb-data:/data/db
    env_file:
      - ./backend/.env
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'mongosh', '--eval', "db.adminCommand('ping')"]
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - medcert-network

volumes:
  mongodb-data:

networks:
  medcert-network:
    driver: bridge
